#pragma warning (disable : 4996)
#include <stdio.h>
#include <malloc.h>

#define NO 0
#define YES 1

int main(void)
{
	FILE *infile, *outfile;
	char **arr, *str, c;
	int maxnum, num, maxpos, strcnt, len, flag;

	infile = fopen("F1.txt", "r");		// открываем файлы на чтение
	outfile = fopen("F2.txt", "w");		// и запись

	// проверяем ошибки при открытии файлов
	if (infile == NULL || outfile == NULL)
		return -1;	// если есть ошибка, то закрываем программу

	arr = NULL;		// массив строк пустой
	str = NULL;		// текущая строка пустая
	maxnum = 0;		// максимальное найденное число 0
	maxpos = -1;	// позиция строки с наибольшим числом пока не найдена
	num = 0;		// текущее число 0
	len = 0;		// длина текущей строки 0
	strcnt = 0;		// количество строк 0
	flag = NO;		// флаг цифры опущен

	// пока не дойдем до конца файла
	while (feof(infile) == NULL)
	{
		c = fgetc(infile);	// читаем символ из фходного файла

		// если этот символ не конец строки и не коне файла
		if (c != '\n' && c != EOF)
		{
			str = (char*)realloc(str, (len + 1) * sizeof(char));	// выделяем память под новый символ в строке
			str[len++] = c;		// записываем его в масив, хранящий строку

			// если найдена цифра
			if (c >= '0' && c <= '9')
			{
				// если это первая цифра в числе
				if (flag == NO)
					num = 0;	// обнуляем текущее число

				num = num * 10 + (c - '0');	// из кода символа получаем значениее цифры и прибавляем к уже найденому числу десятков
				flag = YES;		// поднимаем флаг цифры
			}
			// если найдена не цифра и флаг поднят
			else if (flag == YES)
			{
				// если текущее число больше известного максимального
				if (num > maxnum)
				{
					maxnum = num;		// запоминаем его как новое максимальное
					maxpos = strcnt;	// запоминаем номер строки с новым максимальными числом
				}

				flag = NO;	// опускаем флаг
			}
		}
		// если текущий символ - конец строки или конец файла
		else
		{
			str = (char*)realloc(str, (len + 2) * sizeof(char));	// выделяем память под символы конца строки
			str[len++] = '\n';		// записываем символ переноса строки
			str[len] = '\0';	// записываем символ конца строки

			arr = (char**)realloc(arr, (strcnt + 1) * sizeof(char*));	// выделяем память в массиве строк
			arr[strcnt] = str;	// записываем в него текущую строку
			str = NULL;		// текущая строка пустая

			// если текущее число больше известного максимального
			if (num > maxnum)
			{
				maxnum = num;		// запоминаем его как новое максимальное
				maxpos = strcnt;	// запоминаем номер строки с новым максимальными числом
			}
			
			strcnt++;	// увеличиваем количество считанных строк
			len = 0;	// длина текущей строки 0
			num = 0;	// текущее число 0
		}
	}
	fclose(infile);		// закрываем файл, который открыт на чтение

	// пока не закончатся строки
	for (int i = 0; i < strcnt; i++)
	{
		// если текущая позиция не равна позиции строки с максимальным числом
		if (i != maxpos)
			fputs(arr[i], outfile);	// записываем строку в файл
		
		free(arr[i]);	// освобождаем память, выделенную под строку
	}
	fclose(outfile);	// зарываем файл открытый на запись
	free(arr);		// освобождаем память, выделенную под троки
	printf("Program complete\n");
	getchar();
	return 0;
}
