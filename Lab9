#include <stdio.h>
#define YES 1
#define NO 0
#define SYMNUM 95 // количество печатных символов без учета delet`a
#define OFFSET 32 // смещение печатных символов относительно начала таблицы ASCII
#pragma warning (disable : 4996)

int main(void)
{
	FILE *in_file, *out_file;
	int maxpos, maxnum, pos, c;
	char arr[SYMNUM] = { 0 };	// объявляем массив и обнуляем все его элементы
								// индекс массива + OFFSET = код соответствующего символа из ASCII
								// значение по этому индексу - колчество таких найденных символов в файле

	in_file = fopen("readfile.txt", "r");	// открываем поток ввода
	out_file = fopen("writefile.txt", "w");	// открывем поток вывода

	// проверяем ошибки при открытии потоков
	if (in_file == NULL || out_file == NULL)
		return -1;	// если ошибка, то завершаем программу

	// цикл чтения символов из потока ввода
	// пока не достигнем конца файла
	while ((c = fgetc(in_file)) != EOF)
		// проверяем попадание в границы допустимых символов
		if(c >= OFFSET && c < (SYMNUM + OFFSET))
			arr[c - OFFSET]++;	// прибавляем 1 к нужному символу

	fclose(in_file);	// закрываем поток ввода

	// в цикле пока не выведем каждый элемент
	for (c = 0; c < SYMNUM; c++)
	{
		maxnum = -1;	// для начала как максимальное значение задаем -1
		maxpos = 0;		// позиция максиамльного элемента

		// пока не проверим все элементы массива
		for (pos = 0; pos < SYMNUM; pos++)
		{
			// если текущий элемент больше максимального
			// и текущий элемент не равен -1
			if (arr[pos] > maxnum && arr[pos] != -1)
			{
				maxnum = arr[pos];	// записываем новое максимальное значение
				maxpos = pos;		// запоминаем позицию максимального элемента
			}
		}
		fprintf(out_file, "%c: %d\n", (maxpos + OFFSET), maxnum);	// выводим символ и скольео раз он встретился в строке
		arr[maxpos] = -1;	// записываем вместо найденного максимального элемента -1
	}

	fclose(out_file);	// закрываем поток вывода
	printf("program complete\n");
	getchar();
	return 0;
}
